services:
  laravel.test:
    build:
      context: "./backend/vendor/laravel/sail/runtimes/8.4"
      dockerfile: Dockerfile
      args:
        WWWGROUP: "${WWWGROUP}"
    image: "sail-8.4/app"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${APP_PORT:-80}:80"
      - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
    environment:
      WWWUSER: "${WWWUSER}"
      LARAVEL_SAIL: 1
      XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
      XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
      IGNITION_LOCAL_SITES_PATH: "${PWD}"
    volumes:
      - "./backend:/var/www/html"
      - ./backend/vendor:/var/www/html/vendor
      - ./backend/storage:/var/www/html/storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel.rule=Host(`docs.gs`)"
      - "traefik.http.routers.laravel.entrypoints=web"
      - "traefik.http.services.laravel.loadbalancer.server.port=80"
    networks:
      - sail
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    image: node:20-alpine # Lightweight Node.js image
    working_dir: /app
    volumes:
      - ./frontend:/app # Mount local frontend folder
    ports:
      - "${VITE_APP_PORT:-5173}:${VITE_APP_PORT:-5173}" # Expose Vite port
    environment:
      - CHOKIDAR_USEPOLLING=true # Enable hot reloading in Docker
      - VITE_HOST=0.0.0.0 # Allow access from outside the container
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`app.docs.gs`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=${VITE_APP_PORT:-5173}"
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port ${VITE_APP_PORT:-5173}"
    networks:
      - sail
    depends_on:
      - laravel.test

  pgsql:
    image: "postgres:17"
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    environment:
      PGPASSWORD: "${DB_PASSWORD:-secret}"
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
    volumes:
      - "sail-pgsql:/var/lib/postgresql/data"
      - "./backend/vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql"
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-q"
        - "-d"
        - "${DB_DATABASE}"
        - "-U"
        - "${DB_USERNAME}"
      retries: 3
      timeout: 5s
  redis:
    image: "redis:alpine"
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "sail-redis:/data"
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9288:9200"
    networks:
      - sail

  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    restart: always
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "8087:8080" # Painel do Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # Acesso ao Docker para descobrir containers
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml" # Configuração do Traefik
      - "./traefik/acme.json:/acme.json" # Certificados TLS (se ativado)
    networks:
      - sail

networks:
  sail:
    driver: bridge
volumes:
  sail-pgsql:
    driver: local
  sail-redis:
    driver: local
  esdata:
    driver: local
